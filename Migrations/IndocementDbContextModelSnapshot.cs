// <auto-generated />
using System;
using Indocement_RESTFullAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Indocement_RESTFullAPI.Migrations
{
    [DbContext(typeof(IndocementDbContext))]
    partial class IndocementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Bpjs", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("AnakKe")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("anak_ke")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AnggotaBpjs")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("anggota_bpjs");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdEmployee")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_employee");

                    b.Property<DateTime>("TglPengajuan")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("tgl_pengajuan");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlAkteLahir")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_akte_lahir")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlKk")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_kk")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlSuratNikah")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_surat_nikah")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlSuratPotongGaji")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_surat_potong_gaji")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_bpjs_id");

                    b.HasIndex(new[] { "IdEmployee" }, "bpjs_id_employee_foreign");

                    b.ToTable("bpjs", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Cache", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("key");

                    b.Property<int>("Expiration")
                        .HasColumnType("int")
                        .HasColumnName("expiration");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Key")
                        .HasName("PK_cache_key");

                    b.ToTable("cache", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.CacheLock", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("key");

                    b.Property<int>("Expiration")
                        .HasColumnType("int")
                        .HasColumnName("expiration");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("owner");

                    b.HasKey("Key")
                        .HasName("PK_cache_locks_key");

                    b.ToTable("cache_locks", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Departement", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdPlantDivision")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_plant_division");

                    b.Property<string>("NamaDepartement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_departement");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_departement_id");

                    b.HasIndex(new[] { "NamaDepartement" }, "departement$departement_nama_departement_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "IdPlantDivision" }, "departement_id_plant_division_foreign");

                    b.ToTable("departement", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Employee", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("education");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("employee_name");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("employee_no");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("gender");

                    b.Property<decimal?>("IdEsl")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_esl");

                    b.Property<decimal?>("IdSection")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_section");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("job_title");

                    b.Property<string>("LivingArea")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("living_area")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("NoBpjs")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("no_bpjs");

                    b.Property<DateOnly>("ServiceDate")
                        .HasColumnType("date")
                        .HasColumnName("service_date");

                    b.Property<string>("Telepon")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telepon")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlFoto")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_foto")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("WorkLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("work_location");

                    b.HasKey("Id")
                        .HasName("PK_employee_id");

                    b.HasIndex(new[] { "Email" }, "employee$employee_email_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "EmployeeNo" }, "employee$employee_employee_no_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "IdEsl" }, "employee_id_esl_foreign");

                    b.HasIndex(new[] { "IdSection" }, "employee_id_section_foreign");

                    b.ToTable("employee", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Esl", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Jabatan")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)")
                        .HasColumnName("jabatan");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_esl_id");

                    b.ToTable("esl", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.FailedJob", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("connection");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("exception");

                    b.Property<DateTime>("FailedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("failed_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("queue");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("uuid");

                    b.HasKey("Id")
                        .HasName("PK_failed_jobs_id");

                    b.HasIndex(new[] { "Uuid" }, "failed_jobs$failed_jobs_uuid_unique")
                        .IsUnique();

                    b.ToTable("failed_jobs", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.FamilyEmployee", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("AlamatAyah")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alamat_ayah")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AlamatAyahMertua")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alamat_ayah_mertua")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AlamatIbu")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alamat_ibu")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AlamatIbuMertua")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alamat_ibu_mertua")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AlamatPasangan")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alamat_pasangan")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("EmailAyah")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_ayah");

                    b.Property<string>("EmailAyahMertua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_ayah_mertua");

                    b.Property<string>("EmailIbu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_ibu");

                    b.Property<string>("EmailIbuMertua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_ibu_mertua");

                    b.Property<string>("EmailPasangan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email_pasangan");

                    b.Property<string>("FotoAnak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("foto_anak");

                    b.Property<string>("FotoAyah")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("foto_ayah")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("FotoAyahMertua")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("foto_ayah_mertua")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("FotoIbu")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("foto_ibu")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("FotoIbuMertua")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("foto_ibu_mertua")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("FotoPasangan")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("foto_pasangan")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdEmployee")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_employee");

                    b.Property<string>("JkAnak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jk_anak");

                    b.Property<string>("JkAyah")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("jk_ayah");

                    b.Property<string>("JkAyahMertua")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("jk_ayah_mertua");

                    b.Property<string>("JkIbu")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("jk_ibu");

                    b.Property<string>("JkIbuMertua")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("jk_ibu_mertua");

                    b.Property<string>("JkPasangan")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("jk_pasangan");

                    b.Property<string>("NamaAnak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nama_anak");

                    b.Property<string>("NamaAyah")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_ayah");

                    b.Property<string>("NamaAyahMertua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_ayah_mertua");

                    b.Property<string>("NamaIbu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_ibu");

                    b.Property<string>("NamaIbuMertua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_ibu_mertua");

                    b.Property<string>("NamaPasangan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_pasangan");

                    b.Property<string>("NoBpjsAnak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_bpjs_anak");

                    b.Property<string>("NoBpjsAyah")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("no_bpjs_ayah");

                    b.Property<string>("NoBpjsAyahMertua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("no_bpjs_ayah_mertua");

                    b.Property<string>("NoBpjsIbu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("no_bpjs_ibu");

                    b.Property<string>("NoBpjsIbuMertua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("no_bpjs_ibu_mertua");

                    b.Property<string>("NoBpjsPasangan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("no_bpjs_pasangan");

                    b.Property<string>("PendidikanAnak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pendidikan_anak");

                    b.Property<string>("PendidikanAyah")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("pendidikan_ayah");

                    b.Property<string>("PendidikanAyahMertua")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("pendidikan_ayah_mertua");

                    b.Property<string>("PendidikanIbu")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("pendidikan_ibu");

                    b.Property<string>("PendidikanIbuMertua")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("pendidikan_ibu_mertua");

                    b.Property<string>("PendidikanPasangan")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("pendidikan_pasangan");

                    b.Property<string>("StatusAnak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status_anak");

                    b.Property<string>("StatusAyah")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("status_ayah");

                    b.Property<string>("StatusAyahMertua")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("status_ayah_mertua");

                    b.Property<string>("StatusIbu")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("status_ibu");

                    b.Property<string>("StatusIbuMertua")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("status_ibu_mertua");

                    b.Property<string>("StatusPasangan")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("status_pasangan");

                    b.Property<string>("TeleponAyah")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telepon_ayah")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TeleponAyahMertua")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telepon_ayah_mertua")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TeleponIbu")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telepon_ibu")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TeleponIbuMertua")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telepon_ibu_mertua")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TeleponPasangan")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telepon_pasangan")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TglLahirAnak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tgl_lahir_anak");

                    b.Property<DateOnly>("TglLahirAyah")
                        .HasColumnType("date")
                        .HasColumnName("tgl_lahir_ayah");

                    b.Property<DateOnly>("TglLahirAyahMertua")
                        .HasColumnType("date")
                        .HasColumnName("tgl_lahir_ayah_mertua");

                    b.Property<DateOnly>("TglLahirIbu")
                        .HasColumnType("date")
                        .HasColumnName("tgl_lahir_ibu");

                    b.Property<DateOnly>("TglLahirIbuMertua")
                        .HasColumnType("date")
                        .HasColumnName("tgl_lahir_ibu_mertua");

                    b.Property<DateOnly>("TglLahirPasangan")
                        .HasColumnType("date")
                        .HasColumnName("tgl_lahir_pasangan");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_family_employee_id");

                    b.HasIndex(new[] { "EmailAyahMertua" }, "family_employee$family_employee_email_ayah_mertua_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "EmailAyah" }, "family_employee$family_employee_email_ayah_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "EmailIbuMertua" }, "family_employee$family_employee_email_ibu_mertua_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "EmailIbu" }, "family_employee$family_employee_email_ibu_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "EmailPasangan" }, "family_employee$family_employee_email_pasangan_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "IdEmployee" }, "family_employee_id_employee_foreign");

                    b.ToTable("family_employee", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.IdCard", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdEmployee")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_employee");

                    b.Property<string>("StatusPengajuan")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("status_pengajuan");

                    b.Property<DateTime>("TglPengajuan")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("tgl_pengajuan");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlCardRusak")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_card_rusak")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlSuratKehilangan")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_surat_kehilangan")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_id_card_id");

                    b.HasIndex(new[] { "IdEmployee" }, "id_card_id_employee_foreign");

                    b.ToTable("id_card", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Job", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<byte>("Attempts")
                        .HasColumnType("tinyint")
                        .HasColumnName("attempts");

                    b.Property<long>("AvailableAt")
                        .HasColumnType("bigint")
                        .HasColumnName("available_at");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<long?>("ReservedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("reserved_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_jobs_id");

                    b.HasIndex(new[] { "Queue" }, "jobs_queue_index");

                    b.ToTable("jobs", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.JobBatch", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("id");

                    b.Property<int?>("CancelledAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cancelled_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<string>("FailedJobIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("failed_job_ids");

                    b.Property<int>("FailedJobs")
                        .HasColumnType("int")
                        .HasColumnName("failed_jobs");

                    b.Property<int?>("FinishedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("finished_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Options")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("options")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("PendingJobs")
                        .HasColumnType("int")
                        .HasColumnName("pending_jobs");

                    b.Property<int>("TotalJobs")
                        .HasColumnType("int")
                        .HasColumnName("total_jobs");

                    b.HasKey("Id")
                        .HasName("PK_job_batches_id");

                    b.ToTable("job_batches", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Keluhan", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdEmployee")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_employee");

                    b.Property<string>("Keluhan1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("keluhan")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("status");

                    b.Property<DateTime>("TglKeluhan")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("tgl_keluhan");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_keluhan_id");

                    b.HasIndex(new[] { "IdEmployee" }, "keluhan_id_employee_foreign");

                    b.ToTable("keluhan", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Konsultasi", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdEmployee")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_employee");

                    b.Property<decimal>("IdKaryawan")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_karyawan");

                    b.Property<string>("Konsultasi1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("konsultasi")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("status");

                    b.Property<DateTime>("TglKonsultasi")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("tgl_konsultasi");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_konsultasi_id");

                    b.HasIndex(new[] { "IdEmployee" }, "konsultasi_id_employee_foreign");

                    b.ToTable("konsultasi", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Migration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Batch")
                        .HasColumnType("int")
                        .HasColumnName("batch");

                    b.Property<string>("Migration1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("migration");

                    b.HasKey("Id")
                        .HasName("PK_migrations_id");

                    b.ToTable("migrations", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.PasswordResetToken", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("token");

                    b.HasKey("Email")
                        .HasName("PK_password_reset_tokens_email");

                    b.ToTable("password_reset_tokens", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.PlantDivision", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdUnit")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_unit");

                    b.Property<string>("NamaPlantDivision")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_plant_division");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_plant_division_id");

                    b.HasIndex(new[] { "NamaPlantDivision" }, "plant_division$plant_division_nama_plant_division_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "IdUnit" }, "plant_division_id_unit_foreign");

                    b.ToTable("plant_division", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Section", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdDepartement")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_departement");

                    b.Property<string>("NamaSection")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nama_section");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_section_id");

                    b.HasIndex(new[] { "NamaSection" }, "section$section_nama_section_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "IdDepartement" }, "section_id_departement_foreign");

                    b.ToTable("section", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("id");

                    b.Property<string>("IpAddress")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("ip_address")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("LastActivity")
                        .HasColumnType("int")
                        .HasColumnName("last_activity");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("UserAgent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_agent")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("user_id")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_sessions_id");

                    b.HasIndex(new[] { "LastActivity" }, "sessions_last_activity_index");

                    b.HasIndex(new[] { "UserId" }, "sessions_user_id_index");

                    b.ToTable("sessions", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Unit", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("NamaUnit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nama_unit");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_unit_id");

                    b.HasIndex(new[] { "NamaUnit" }, "unit$unit_nama_unit_unique")
                        .IsUnique();

                    b.ToTable("unit", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.User", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EmailVerifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("email_verified_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<decimal>("IdEmployee")
                        .HasColumnType("numeric(20, 0)")
                        .HasColumnName("id_employee");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("RememberToken")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("remember_token")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("role");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_users_id");

                    b.HasIndex(new[] { "Email" }, "users$users_email_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "IdEmployee" }, "users_id_employee_foreign");

                    b.ToTable("users", "indocement");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Bpjs", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Bpjs")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("bpjs$bpjs_id_employee_foreign");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Departement", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.PlantDivision", "IdPlantDivisionNavigation")
                        .WithMany("Departements")
                        .HasForeignKey("IdPlantDivision")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("departement$departement_id_plant_division_foreign");

                    b.Navigation("IdPlantDivisionNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Employee", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Esl", "IdEslNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdEsl")
                        .HasConstraintName("employee$employee_id_esl_foreign");

                    b.HasOne("Indocement_RESTFullAPI.Models.Section", "IdSectionNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdSection")
                        .HasConstraintName("employee$employee_id_section_foreign");

                    b.Navigation("IdEslNavigation");

                    b.Navigation("IdSectionNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.FamilyEmployee", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("FamilyEmployees")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("family_employee$family_employee_id_employee_foreign");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.IdCard", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("IdCards")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("id_card$id_card_id_employee_foreign");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Keluhan", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Keluhans")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("keluhan$keluhan_id_employee_foreign");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Konsultasi", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Konsultasis")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("konsultasi$konsultasi_id_employee_foreign");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.PlantDivision", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Unit", "IdUnitNavigation")
                        .WithMany("PlantDivisions")
                        .HasForeignKey("IdUnit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("plant_division$plant_division_id_unit_foreign");

                    b.Navigation("IdUnitNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Section", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Departement", "IdDepartementNavigation")
                        .WithMany("Sections")
                        .HasForeignKey("IdDepartement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("section$section_id_departement_foreign");

                    b.Navigation("IdDepartementNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.User", b =>
                {
                    b.HasOne("Indocement_RESTFullAPI.Models.Employee", "IdEmployeeNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("users$users_id_employee_foreign");

                    b.Navigation("IdEmployeeNavigation");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Departement", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Employee", b =>
                {
                    b.Navigation("Bpjs");

                    b.Navigation("FamilyEmployees");

                    b.Navigation("IdCards");

                    b.Navigation("Keluhans");

                    b.Navigation("Konsultasis");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Esl", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.PlantDivision", b =>
                {
                    b.Navigation("Departements");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Section", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Indocement_RESTFullAPI.Models.Unit", b =>
                {
                    b.Navigation("PlantDivisions");
                });
#pragma warning restore 612, 618
        }
    }
}
